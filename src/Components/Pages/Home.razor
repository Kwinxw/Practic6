@page "/"

@using Microsoft.AspNetCore.Components.Authorization
@using Practic5.Auth;
@using Practic5.Models;
@using Practic5.Components;
@using Practic5.Components.Layout

@inject IJSRuntime js
@inject KwinxwPractic3Context Context
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card bg-light text-dark">
                <img src="images/2587d16c7035c155ba1bee3bb6d5ded2.jpg" class="card-img-top" alt="Категории" />
                <div class="card-body text-center">
                    <NavLink class="nav-link" href="Categories">
                        <h5 class="card-title">Категории</h5>
                    </NavLink>
                    <p class="card-text">Изучите различные категории доступных рецептов.</p>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card bg-light text-dark">
                <img src="images/9255700.png" class="card-img-top" alt="Пользователи" />
                <div class="card-body text-center">
                    <NavLink class="nav-link" href="Users">
                        <h5 class="card-title">Пользователи</h5>
                    </NavLink>
                    <p class="card-text">Управляйте пользователями вашего приложения.</p>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card bg-light text-dark">
                <img src="images/1.webp" class="card-img-top" alt="Рецепты" />
                <div class="card-body text-center">
                    <NavLink class="nav-link" href="Recipes">
                        <h5 class="card-title">Рецепты</h5>
                    </NavLink>
                    <p class="card-text">Откройте для себя вкусные и простые рецепты для приготовления.</p>
                </div>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<style>
    .card {
        background-color: #d3d3d3;
    }

    .card-title, .card-text {
        color: #333;
    }
</style>

@*
<AuthorizeView>
    <Authorized>
        @* Получаем состояние аутентификации 
        <h1>Добро пожаловать, @userName!</h1>
        <button class="btn btn-outline-danger" @onclick="Logout">Выход</button>
    </Authorized>
    <NotAuthorized>
        <h1>Привет, гость!</h1>
        <NavLink class="btn btn-primary" href="/login">Вход</NavLink>
    </NotAuthorized>
</AuthorizeView>
*@

@if (MainLayout.CurrentUser != null)
{
    <h1>Добро пожаловать, @MainLayout.CurrentUser.FirstName!</h1>
    <button class="btn btn-outline-danger" @onclick="Logout">Выход</button>
}
else
{
    <h1>Привет, гость!</h1>
    <NavLink class="btn btn-primary" href="/login">Вход</NavLink>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private string userName;

    protected override async Task OnInitializedAsync()
    {
        // Проверяем, что authenticationState не null
        if (authenticationState != null)
        {
            var authState = await authenticationState;
            userName = authState.User.Identity?.Name ?? "Пользователь";
        }
        else
        {
            userName = "Гость";
        }
    }

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationStateAsync(null);
        navManager.NavigateTo("/");
    }
}
